import { useState, useCallback, useEffect } from 'react';

import {
    Card,
    Select,
    TextField
} from '@shopify/polaris';
import settingsJson from './../../../utils/settings.json';


export default function DiscountPhotoVideoReview(props) {

    const [isEnableDiscountChecked, setIsEnableDiscountChecked] = useState(
        props.reviewDiscountSettings?.isDiscountEnabled || false
    );
    const [selectedSameDiscount, setSelectedSameDiscount] = useState(
        props.reviewDiscountSettings?.isSameDiscount || false
    );

    const [selectedSameDiscountType, setSelectedSameDiscountType] = useState(
        props.reviewDiscountSettings?.sameDiscountType || false
    );

    const [selectedDifferentDiscountPhotoType, setSelectedDifferentDiscountPhotoType] = useState(
        props.reviewDiscountSettings?.differentDiscountPhotoType || false
    );
    const [selectedDifferentDiscountVideoType, setSelectedDifferentDiscountVideoType] = useState(
        props.reviewDiscountSettings?.differentDiscountVideoType || false
    );

    const [sameDiscountValue, setSameDiscountValue] = useState(
        props.reviewDiscountSettings?.sameDiscountValue || 0
    );

    const [differentDiscountPhotoValue, setDifferentDiscountPhotoValue] = useState(
        props.reviewDiscountSettings?.differentDiscountPhotoValue || 0
    );

    const [differentDiscountVideoValue, setDifferentDiscountVideoValue] = useState(
        props.reviewDiscountSettings?.differentDiscountVideoValue || 0
    );


    const [selectedAutoGeneratedDiscount, setSelectedAutoGeneratedDiscount] = useState(
        props.reviewDiscountSettings?.isAutoGeneratedDiscount || false
    );

    const [discountMessage, setDiscountMessage] = useState(null);

    const [selectedDiscountCode, setSelectedDiscountCode] = useState(
        props.reviewDiscountSettings?.discountCode || ""
    );
    const [initialData, setInitialData] = useState({});


    const [reviewDiscountSettingsObj, setReviewDiscountSettingsObj] = useState(
        props.reviewDiscountSettings ?? {}
    );


    useEffect(() => {
        setInitialData({
            sameDiscountValue: reviewDiscountSettingsObj.sameDiscountValue || '',
            differentDiscountVideoValue: reviewDiscountSettingsObj.differentDiscountVideoValue || '',
            differentDiscountPhotoValue: reviewDiscountSettingsObj.differentDiscountPhotoValue || '',
            discountCode: reviewDiscountSettingsObj.discountCode || '',
        });

    }, [reviewDiscountSettingsObj]);


    const handleCheckboxEnableChange = async event => {
        try {
            const eventKey = event.target.name;

            const updateData = {
                field: event.target.name,
                value: event.target.checked,
                actionType: "discountPhotoVideoReview",
                shop: props.shopRecords.shop
            };

            const response = await fetch('/api/collect-review-setting', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updateData),
            });
            const data = await response.json();
            if (data.status == 200) {
                shopify.toast.show(data.message, {
                    duration: settingsJson.toasterCloseTime
                });
            } else {
                shopify.toast.show(data.message, {
                    duration: settingsJson.toasterCloseTime,
                    isError: true
                });
            }
            if (eventKey == 'isDiscountEnabled') {
                setIsEnableDiscountChecked(!event.target.checked);
            }
        } catch (error) {
            console.error('Error updating record:', error);
        }

    };


    const handleSelectChange = async (value, name) => {
        const updateData = {
            field: name,
            value: value,
            shop: props.shopRecords.shop,
            actionType: "discountPhotoVideoReview"
        };
        const response = await fetch('/api/collect-review-setting', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(updateData),
        });
        const data = await response.json();
        if (data.status == 200) {

            setReviewDiscountSettingsObj(prevState => ({
                ...prevState,
                [name]: value
            }));


            shopify.toast.show(data.message, {
                duration: settingsJson.toasterCloseTime
            });
        } else {
            shopify.toast.show(data.message, {
                duration: settingsJson.toasterCloseTime,
                isError: true
            });
        }

    };

    const changeRadioButtons = async event => {
        try {
            const eventKey = event.target.name;
            const eventVal = event.target.value;
            const updateData = {
                field: event.target.name,
                value: eventVal,
                actionType: "discountPhotoVideoReview",
                shop: props.shopRecords.shop
            };

            const response = await fetch('/api/collect-review-setting', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updateData),
            });
            const data = await response.json();
            if (data.status == 200) {

                setReviewDiscountSettingsObj(prevState => ({
                    ...prevState,
                    [eventKey]: eventVal
                }));

                shopify.toast.show(data.message, {
                    duration: settingsJson.toasterCloseTime
                });
            } else {
                shopify.toast.show(data.message, {
                    duration: settingsJson.toasterCloseTime,
                    isError: true
                });
            }
            if (eventKey == 'isSameDiscount') {
                setSelectedSameDiscount(eventVal === 'true');
                if (eventVal === 'false') {
                    setSelectedAutoGeneratedDiscount(true);
                }
            } else if (eventKey == 'sameDiscountType') {
                setSelectedSameDiscountType(eventVal);
            } else if (eventKey == 'differentDiscountPhotoType') {
                setSelectedDifferentDiscountPhotoType(eventVal);
            } else if (eventKey == 'differentDiscountVideoType') {
                setSelectedDifferentDiscountVideoType(eventVal);
            } else if (eventKey == 'isAutoGeneratedDiscount') {
                setSelectedAutoGeneratedDiscount(eventVal === 'true');
            }


        } catch (error) {
            console.error('Error updating record:', error);
        }

    };

    const changeInput = (event) => {
        const eventKey = event.target.name;
        const eventVal = event.target.value;

        if (eventKey == 'sameDiscountValue') {
            setSameDiscountValue(eventVal);
        } else if (eventKey == 'differentDiscountPhotoValue') {
            setDifferentDiscountPhotoValue(eventVal);
        } else if (eventKey == 'differentDiscountVideoValue') {
            setDifferentDiscountVideoValue(eventVal);
        } else if (eventKey == 'discountCode') {
            setSelectedDiscountCode(eventVal);
        }

    };


    const inputBlur = async (e) => {
        if (initialData[e.target.name] != e.target.value) {
            const updateData = {
                field: e.target.name,
                value: e.target.value,
                actionType: "discountPhotoVideoReview",
                shop: props.shopRecords.shop
            };
            const response = await fetch('/api/collect-review-setting', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updateData),
            });
            const data = await response.json();
            if (data.status == 200) {

                setReviewDiscountSettingsObj(prevState => ({
                    ...prevState,
                    [e.target.name]: e.target.value
                }));

                shopify.toast.show(data.message, {
                    duration: settingsJson.toasterCloseTime
                });
                if (e.target.name == 'discountCode' && e.target.value == "") {
                    setDiscountMessage("");
                }

            } else {
                shopify.toast.show(data.message, {
                    duration: settingsJson.toasterCloseTime,
                    isError: true
                });
            }
        }

    }

    const validateDiscountCode = async () => {

        const updateData = {
            code: reviewDiscountSettingsObj.discountCode,
            actionType: "validateDiscountCode",
            shop: props.shopRecords.shop
        };
        const response = await fetch('/api/collect-review-setting', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(updateData),
        });
        const data = await response.json();
        if (data.status == 200) {
            setDiscountMessage(data.message);

        }

    }




    return (
        <div className='row'>
            <div className='col-md-12'>
                <div className='collectreviewformbox'>
                    <Card>
                        <div className='reviewtiming_wrap'>
                            <div className='form-group m-0'>
                                <div className="form-check form-switch">
                                    <input
                                        checked={
                                            isEnableDiscountChecked
                                        }
                                        onChange={
                                            handleCheckboxEnableChange
                                        }
                                        className="form-check-input"
                                        type="checkbox"
                                        role="switch"
                                        name="isDiscountEnabled"
                                        id="EnableDiscountForPhotoVideo"
                                    />
                                    <label
                                        className="form-check-label"
                                        htmlFor="EnableDiscountForPhotoVideo"
                                    >
                                        Enable discount for photo/video
                                    </label>
                                </div>
                            </div>
                            <div className='whitebox flxcol gapy24'>
                                <div className='form-group m-0 flxrow gapx24'>
                                    <div className='checkbutton'>
                                        <input type='radio' disabled={!isEnableDiscountChecked} onChange={changeRadioButtons} id='sameDiscount' name='isSameDiscount' value="true" checked={selectedSameDiscount === true} />
                                        <label htmlFor="sameDiscount">
                                            <h6>Same discount</h6>
                                            <p>Offer the same discount for photo/video</p>
                                        </label>
                                    </div>
                                    <div className='checkbutton'>
                                        <input type='radio' disabled={!isEnableDiscountChecked} onChange={changeRadioButtons} id='differentDiscount' name='isSameDiscount' value="false" checked={selectedSameDiscount === false} />
                                        <label htmlFor="differentDiscount">
                                            <h6>Different discount</h6>
                                            <p>Offer different discounts for photo/video
                                            </p>
                                        </label>
                                    </div>
                                </div>

                                {selectedSameDiscount &&
                                    <div className='form-group m-0 horizontal-form align-items-center gapx24'>
                                        <label htmlFor="" className='w-auto'>Discount amount</label>
                                        <div className='dollerandpersantage gapx24'>
                                            <div className='radiowrapdis flxrow'>
                                                <div className='radiocolumn'>
                                                    <input type="radio" disabled={!isEnableDiscountChecked} name='sameDiscountType' onChange={changeRadioButtons} value="percentage" id='amountpersantage' checked={selectedSameDiscountType === 'percentage'} />
                                                    <label htmlFor="amountpersantage">%</label>
                                                </div>
                                                <div className='radiocolumn'>
                                                    <input type="radio" disabled={!isEnableDiscountChecked} name='sameDiscountType' onChange={changeRadioButtons} value="fixed_amount" id='amountdoller' checked={selectedSameDiscountType === 'fixed_amount'} />
                                                    <label htmlFor="amountdoller">$</label>
                                                </div>
                                            </div>
                                            <div className='inputwrap'>
                                                <input type='number' disabled={!isEnableDiscountChecked} className='input_text' onBlur={inputBlur} onChange={changeInput} name="sameDiscountValue" value={sameDiscountValue} placeholder='Amount' />
                                            </div>
                                        </div>
                                    </div>
                                }

                                {selectedSameDiscount === false &&
                                    <>
                                        <div className='form-group m-0 horizontal-form align-items-center gapx24'>
                                            <label htmlFor="" className='w-auto'>Discount for a photo </label>
                                            <div className='dollerandpersantage gapx24'>
                                                <div className='radiowrapdis flxrow'>
                                                    <div className='radiocolumn'>
                                                        <input type="radio" disabled={!isEnableDiscountChecked} name='differentDiscountPhotoType' onChange={changeRadioButtons} value="percentage" id='diffamountpersantage' checked={selectedDifferentDiscountPhotoType === 'percentage'} />
                                                        <label htmlFor="diffamountpersantage">%</label>
                                                    </div>
                                                    <div className='radiocolumn'>
                                                        <input type="radio" disabled={!isEnableDiscountChecked} name='differentDiscountPhotoType' onChange={changeRadioButtons} value="fixed_amount" id='diffamountdoller' checked={selectedDifferentDiscountPhotoType === 'fixed_amount'} />
                                                        <label htmlFor="diffamountdoller">$</label>
                                                    </div>
                                                </div>
                                                <div className='inputwrap'>
                                                    <input type='number' disabled={!isEnableDiscountChecked} className='input_text' onBlur={inputBlur} onChange={changeInput} name="differentDiscountPhotoValue" value={differentDiscountPhotoValue} placeholder='Amount' />
                                                </div>
                                            </div>
                                        </div>

                                        <div className='form-group m-0 horizontal-form align-items-center gapx24'>
                                            <label htmlFor="" className='w-auto'>Discount for a video </label>
                                            <div className='dollerandpersantage gapx24'>
                                                <div className='radiowrapdis flxrow'>
                                                    <div className='radiocolumn'>
                                                        <input type="radio" disabled={!isEnableDiscountChecked} name='differentDiscountVideoType' onChange={changeRadioButtons} value="percentage" id='diffvideoamountpersantage' checked={selectedDifferentDiscountVideoType === 'percentage'} />
                                                        <label htmlFor="diffvideoamountpersantage">%</label>
                                                    </div>
                                                    <div className='radiocolumn'>
                                                        <input type="radio" disabled={!isEnableDiscountChecked} name='differentDiscountVideoType' onChange={changeRadioButtons} value="fixed_amount" id='diffvideoamountdoller' checked={selectedDifferentDiscountVideoType === 'fixed_amount'} />
                                                        <label htmlFor="diffvideoamountdoller">$</label>
                                                    </div>
                                                </div>
                                                <div className='inputwrap'>
                                                    <input type='number' disabled={!isEnableDiscountChecked} className='input_text' onBlur={inputBlur} onChange={changeInput} name="differentDiscountVideoValue" value={differentDiscountVideoValue} placeholder='Amount' />
                                                </div>
                                            </div>
                                        </div>
                                    </>
                                }


                            </div>
                            <div className='whitebox flxcol gapy24'>
                                <div className='form-group m-0 flxrow gapx24'>
                                    <div className='checkbutton'>
                                        <input type='radio' disabled={!isEnableDiscountChecked} id='autogenerate' name='isAutoGeneratedDiscount' onChange={changeRadioButtons} value="true" checked={selectedAutoGeneratedDiscount === true} />
                                        <label htmlFor="autogenerate">
                                            <h6>Auto-generate</h6>
                                            <p>A one time use code for each review</p>
                                        </label>
                                    </div>
                                    <div className='checkbutton'>
                                        <input type='radio' disabled={!isEnableDiscountChecked || !selectedSameDiscount} id='discountcode' name='isAutoGeneratedDiscount' onChange={changeRadioButtons} value="false" checked={selectedAutoGeneratedDiscount === false} />
                                        <label htmlFor="discountcode">
                                            <h6>Single Shopify discount code</h6>
                                            <p>Same code for all customers</p>
                                        </label>
                                    </div>
                                </div>

                                {selectedAutoGeneratedDiscount &&
                                    <div className='form-group m-0 horizontal-form align-items-center gapx24'>
                                        <label htmlFor="" className='w-auto'>Discount expires after</label>
                                        <div className='col-lg-3'>
                                            <Select
                                                name="expiredAfter"
                                                id="expiredAfter"
                                                options={settingsJson.discountExpireDays}
                                                disabled={!isEnableDiscountChecked}
                                                onChange={
                                                    handleSelectChange
                                                }
                                                value={reviewDiscountSettingsObj?.expiredAfter}
                                            />

                                        </div>
                                    </div>
                                }
                                {selectedAutoGeneratedDiscount === false &&
                                    <div className='form-group m-0 horizontal-form alightop align-items-start gapx24'>
                                        <label htmlFor="" className='w-auto'>Insert code</label>
                                        <div className='col-lg-3'>
                                            <input type='text' disabled={!isEnableDiscountChecked} onChange={changeInput} onBlur={inputBlur} name="discountCode" value={selectedDiscountCode} className="input_text" placeholder='(e.g. PHOTO-REVIEW)' />
                                            <div className='inputnote'>First create the discount on Shopify and then add here</div>
                                            <div className='text-danger'>{discountMessage}</div>
                                        </div>
                                        <div className='btnwrap m-0'>
                                            <button type="button" disabled={!selectedDiscountCode || !isEnableDiscountChecked} onClick={validateDiscountCode} className='revbtn regularbtn'>Validate</button>

                                        </div>
                                    </div>
                                }
                            </div>
                            <div className='form-group m-0 horizontal-form align-items-center gapx24'>
                                <label htmlFor="" className='w-auto'>Offer to reviewers from</label>
                                <div className='col-lg-3'>

                                    <Select
                                        name="reviewType"
                                        id="reviewType"
                                        options={settingsJson.discountOfferReviewer}
                                        disabled={!isEnableDiscountChecked}
                                        onChange={
                                            handleSelectChange
                                        }
                                        value={reviewDiscountSettingsObj?.reviewType}
                                    />

                                </div>
                            </div>
                        </div>
                    </Card>
                </div>
            </div>


        </div>
    );
}